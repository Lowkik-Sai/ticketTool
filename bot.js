const { MessageEmbed, Client } = require('discord.js');
const client = new Client();
const dotenv = require('dotenv');
const web = require('./web.js');
dotenv.config({
    path: './.env'
});
client.on('ready', async () => {
    console.log(`Login ${client.user.username}
-------------------------------`);
    setInterval(async () => {
        var random = Math.floor(Math.random() * 6);
        if (random == 0) {
            await client.user.setPresence({
                status: 'online',
                    activity: {
                        name: 'Í±¥ÏùòÏÇ¨Ìï≠ Ï±ÑÎÑêÏóêÏÑú Ïù¥Î™®ÏßÄÎ•º ÎàåÎü¨ÏÑú Ìã∞Ïºì Ïó¥Í∏∞',
                        type: 'PLAYING'
                    }
            });
        } else if (random == 1) {
            await client.user.setPresence({
                status: 'online',
                    activity: {
                        name: client.user.username,
                        type: 'STREAMING',
                        url: `https://twitch.tv/${client.user.username}`
                    }
            });
        } else if (random == 2) {
            await client.user.setPresence({
                status: 'invisible'
            });
        } else if (random == 3) {
            await client.user.setPresence({
                status: 'online',
                    activity: {
                        name: 'Ìã∞Ïºì Ï±ÑÎÑêÏóêÏÑú XÎ•º ÎàåÎü¨ÏÑú Ìã∞Ïºì Îã´Í∏∞',
                        type: 'PLAYING'
                    }
            });
        } else if (random == 4) {
            await client.user.setPresence({
                status: 'online',
                    activity: {
                        name: 'Í∞úÏù∏Î∞© Ïã†Ï≤≠ Ï±ÑÎÑêÏóêÏÑú Ïù¥Î™®ÏßÄÎ•º ÎàåÎü¨ÏÑú Í∞úÏù∏Î∞© ÎßåÎì§Í∏∞',
                        type: 'PLAYING'
                    }
            });
        } else if (random == 5) {
            await client.user.setPresence({
                status: 'online',
                    activity: {
                        name: 'Î¥áÏù¥ Îã§Ïö¥ÌÉÄÏûÑÏùº Í≤ΩÏö∞Ïóê ÏÑúÎ≤ÑÏû•Ïù¥ÎÇò ÏÑúÎ≤ÑÏû• ÎπÑÏÑúÏóêÍ≤å DM Î≥¥ÎÇ¥ÏÑú ÏàòÎèôÏúºÎ°ú ÏûëÏóÖÏùÑ Ï≤òÎ¶¨ÌïòÍ∏∞',
                        type: 'PLAYING'
                    }
            });
        }
    }, 5000);
    await client.channels.cache.get('707151006617829488').bulkDelete(1);
    const embed = new MessageEmbed()
        .setTitle('Ìã∞Ïºì Ïó¥Í∏∞')
        .setColor(0x00ffff)
        .setDescription('Í±¥ÏùòÏÇ¨Ìï≠Ïù¥ ÏûàÎã§Î©¥ ÏïÑÎûò Î∞òÏùëÏùÑ ÎàåÎü¨ Ìã∞ÏºìÏùÑ Ïó¥Ïñ¥Ï£ºÏÑ∏Ïöî.\nÎ¥áÏù¥ Ïû¨ÏãúÏûëÎêòÏóàÏùÑ Í≤ΩÏö∞ Ìã∞ÏºìÏùÑ Îã´ÏùÑ Îïå Î∞òÏùëÏùÑ ÎàåÎü¨ÎèÑ Îã´ÌûàÏßÄ ÏïäÏùÑ Ïàò ÏûàÏñ¥Ïöî.\nÌã∞ÏºìÏù¥ ÏûêÎèôÏúºÎ°ú Îã´ÌûàÏßÄ ÏïäÏúºÎ©¥ ÏàòÎèôÏúºÎ°ú Ï±ÑÎÑêÏùÑ ÏÇ≠Ï†úÌï¥Ï£ºÏÑ∏Ïöî.')
        .setThumbnail(client.guilds.cache.get('707028253218570280').iconURL({
            dynamic: true,
            format: 'jpg',
            size: 2048
        }))
        .setFooter(client.guilds.cache.get('707028253218570280').name, client.guilds.cache.get('707028253218570280').iconURL({
            dynamic: true,
            format: 'jpg',
            size: 2048
        }))
        .setTimestamp();
    await client.channels.cache.get('707151006617829488').send(embed).then(async m => {
        await m.react('üì©');
        const filter = (r, u) => r.emoji.name == 'üì©' && !u.bot;
        const collector = await m.createReactionCollector(filter);
        collector.on('collect', async (r, u) => {
            await r.users.remove(u);
            await client.guilds.cache.get('707028253218570280').channels.create(`üé´‚îÇÌã∞Ïºì ${u.id} ${Math.floor(Math.random() * 10000) + 1}`, {
                permissionOverwrites: [
                    {
                        id: r.message.guild.roles.everyone.id,
                        deny: [
                            'VIEW_CHANNEL',
                            'SEND_MESSAGES'
                        ]
                    },
                    {
                        id: u.id,
                        allow: [
                            'VIEW_CHANNEL',
                            'SEND_MESSAGES'
                        ]
                    },
                    {
                        id: '707111485754703893',
                        allow: [
                            'VIEW_CHANNEL',
                            'SEND_MESSAGES'
                        ]
                    },
                    {
                        id: '707118171634794527',
                        allow: [
                            'VIEW_CHANNEL',
                            'SEND_MESSAGES'
                        ]
                    }
                ],
                parent: r.message.guild.channels.cache.find(x => x.type == 'category' && x.name == 'üé´ Ìã∞Ïºì')
            }).then(async ch => {
                await ch.send(`${u.toString()} ${r.message.guild.roles.cache.get('707111485754703893')} ${r.message.guild.roles.cache.get('707118171634794527')}`)
                const ___embed = new MessageEmbed()
                    .setTitle(`${client.user.username} Î°úÍ∑∏`)
                    .addField('ÌÉÄÏûÖ', 'Ìã∞Ïºì ÏÉùÏÑ±')
                    .addField('Ìã∞Ïºì Ï±ÑÎÑê', ch.toString())
                    .addField('Ïã§ÌñâÌïú Ïú†Ï†Ä', u.toString())
                    .setColor(0x00ffff)
                    .setThumbnail(client.guilds.cache.get('707028253218570280').iconURL({
                        dynamic: true,
                        format: 'jpg',
                        size: 2048
                    }))
                    .setFooter(client.guilds.cache.get('707028253218570280').name, client.guilds.cache.get('707028253218570280').iconURL({
                        dynamic: true,
                        format: 'jpg',
                        size: 2048
                    }))
                    .setTimestamp();
                await client.channels.cache.get('707156036217208883').send(___embed);
                const _embed = new MessageEmbed()
                    .setTitle('Ìã∞Ïºì Îã´Í∏∞')
                    .setDescription('Ìã∞ÏºìÏùÑ Îã´ÏúºÎ†§Î©¥ ÏïÑÎûò Ïù¥Î™®ÏßÄÎ•º ÎàåÎü¨Ï£ºÏÑ∏Ïöî')
                    .setColor(0x00ffff)
                    .setThumbnail(client.guilds.cache.get('707028253218570280').iconURL({
                        dynamic: true,
                        format: 'jpg',
                        size: 2048
                    }))
                    .setFooter(client.guilds.cache.get('707028253218570280').name, client.guilds.cache.get('707028253218570280').iconURL({
                        dynamic: true,
                        format: 'jpg',
                        size: 2048
                    }))
                    .setTimestamp();
                await ch.send(_embed).then(async _m => {
                    await _m.react('‚ùå');
                    const _filter = (r, u) => r.emoji.name == '‚ùå' && !u.bot;
                    const _collector = await _m.createReactionCollector(_filter, {
                        max: 1
                    });
                    _collector.on('end', async collected => {
                        await collected.first().message.channel.delete();
                        const __embed = new MessageEmbed()
                            .setTitle(`${client.user.username} Î°úÍ∑∏`)
                            .addField('ÌÉÄÏûÖ', 'Ìã∞Ïºì Îã´Ïùå')
                            .addField('Ìã∞Ïºì Ï±ÑÎÑê', `\`#${collected.first().message.channel.name}\``)
                            .addField('Ïã§ÌñâÌïú Ïú†Ï†Ä', collected.first().users.cache.find(x => !x.bot).toString())
                            .setColor(0x00ffff)
                            .setThumbnail(client.guilds.cache.get('707028253218570280').iconURL({
                                dynamic: true,
                                format: 'jpg',
                                size: 2048
                            }))
                            .setFooter(client.guilds.cache.get('707028253218570280').name, client.guilds.cache.get('707028253218570280').iconURL({
                                dynamic: true,
                                format: 'jpg',
                                size: 2048
                            }))
                            .setTimestamp();
                            await client.channels.cache.get('707156036217208883').send(__embed);
                    });
                });
            });
        });
    });
    await client.channels.cache.get('707130956322045972').bulkDelete(1);
    await client.channels.cache.get('707130956322045972').send(new MessageEmbed()
    .setTitle('Í∞úÏù∏Î∞© Ïã†Ï≤≠ÌïòÍ∏∞')
    .setColor(0x00ffff)
    .setDescription('Í∞úÏù∏Î∞©ÏùÑ ÏÇ¨Ïö©ÌïòÎ†§Î©¥ ÏïÑÎûò Î∞òÏùëÏùÑ ÎàåÎü¨Ï£ºÏÑ∏Ïöî.\n(3ÏùºÍ∞Ñ ÏÇ¨Ïö©ÌïòÏßÄ ÏïäÏúºÎ©¥ ÏûêÎèôÏúºÎ°ú ÏÇ≠Ï†úÎèºÏöî.)')
    .setThumbnail(client.guilds.cache.get('707028253218570280').iconURL({
        dynamic: true,
        format: 'jpg',
        size: 2048
    }))
    .setFooter(client.guilds.cache.get('707028253218570280').name, client.guilds.cache.get('707028253218570280').iconURL({
        dynamic: true,
        format: 'jpg',
        size: 2048
    }))
    .setTimestamp()
    ).then(async m => {
        await m.react('üè°');
        const filter = (r, u) => r.emoji.name == 'üè°' && !u.bot;
        const collector = await m.createReactionCollector(filter);
        collector.on('collect', async (r, u) => {
            await r.users.remove(u);
        if (r.message.guild.channels.cache.some(x => x.type == 'text' && x.topic == u.id)) return u.send(`Ïù¥ÎØ∏ Í∞úÏù∏Î∞©Ïù¥ ÏûàÎäîÎç∞Ïöî? ${r.message.guild.channels.cache.find(x => x.type == 'text' && x.topic == u.id)}`);
        r.message.guild.channels.create(`üè°‚îÇÍ∞úÏù∏Î∞© ${u.tag.replace(/#/gi, '-')}`, {
            type: 'text',
            permissionOverwrites: [
                {
                    id: u.id,
                    allow: [
                        'ADD_REACTIONS',
                        'ATTACH_FILES',
                        'EMBED_LINKS',
                        'MANAGE_CHANNELS',
                        'MANAGE_MESSAGES',
                        'MANAGE_ROLES',
                        'MANAGE_WEBHOOKS',
                        'MENTION_EVERYONE',
                        'READ_MESSAGE_HISTORY',
                        'SEND_MESSAGES',
                        'SEND_TTS_MESSAGES',
                        'USE_EXTERNAL_EMOJIS',
                        'VIEW_CHANNEL'
                    ],
                    deny: [
                        'CREATE_INSTANT_INVITE'
                    ]
                },
                {
                    id: r.message.guild.roles.everyone.id,
                    deny: [
                        'ADD_REACTIONS',
                        'ATTACH_FILES',
                        'CREATE_INSTANT_INVITE',
                        'EMBED_LINKS',
                        'MANAGE_CHANNELS',
                        'MANAGE_MESSAGES',
                        'MANAGE_ROLES',
                        'MANAGE_WEBHOOKS',
                        'MENTION_EVERYONE',
                        'SEND_MESSAGES',
                        'SEND_TTS_MESSAGES',
                        'USE_EXTERNAL_EMOJIS',
                        'READ_MESSAGE_HISTORY',
                        'VIEW_CHANNEL'
                    ]
                },
                {
                    id: '707111555321430078',
                    deny: [
                        'ADD_REACTIONS',
                        'ATTACH_FILES',
                        'CREATE_INSTANT_INVITE',
                        'EMBED_LINKS',
                        'MANAGE_CHANNELS',
                        'MANAGE_MESSAGES',
                        'MANAGE_ROLES',
                        'MANAGE_WEBHOOKS',
                        'MENTION_EVERYONE',
                        'SEND_MESSAGES',
                        'SEND_TTS_MESSAGES',
                        'USE_EXTERNAL_EMOJIS',
                        'READ_MESSAGE_HISTORY',
                        'VIEW_CHANNEL'
                    ]
                }
            ],
            parent: '707130917847564350',
            topic: u.id
        }).then(async ch => {
            u.send(`Í∞úÏù∏Î∞©Ïù¥ ÏÉùÏÑ±ÎêòÏóàÏñ¥Ïöî! ${ch}
(Ï∞∏Í≥†Î°ú 3ÏùºÍ∞Ñ ÏÇ¨Ïö©ÌïòÏßÄ ÏïäÏùÑ Í≤ΩÏö∞ ÏÇ≠Ï†úÎèºÏöî.)`);
            const filter = () => true;
            const collector = ch.createMessageCollector(filter, {
                idle: 259200000
            });
            collector.on('end', async collected => {
                await ch.delete();
                await u.send('3Ïùº ÎèôÏïà Í∞úÏù∏Î∞©ÏùÑ ÏÇ¨Ïö©ÌïòÏßÄ ÏïäÏïÑÏÑú Ï±ÑÎÑêÏù¥ ÏûêÎèôÏúºÎ°ú ÏÇ≠Ï†úÎêòÏóàÏñ¥Ïöî.')
            });
        });
        })
    })
});
client.on('guildUpdate', async (_old, _new) => {
    await client.user.setAvatar(_new.iconURL({
        dynamic: true,
        format: 'jpg',
        size: 2048
    }));
});
client.login(process.env.TOKEN);
web.create(client);